<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Peike]]></title>
  <link href="http://CollinDai.github.com/atom.xml" rel="self"/>
  <link href="http://CollinDai.github.com/"/>
  <updated>2013-02-27T16:17:50-05:00</updated>
  <id>http://CollinDai.github.com/</id>
  <author>
    <name><![CDATA[Peike Dai]]></name>
    <email><![CDATA[dpk1216@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[找零问题]]></title>
    <link href="http://CollinDai.github.com/blog/2013/02/26/changing-money/"/>
    <updated>2013-02-26T16:09:00-05:00</updated>
    <id>http://CollinDai.github.com/blog/2013/02/26/changing-money</id>
    <content type="html"><![CDATA[<p>先来看一下题目：</p>

<blockquote><p>How many ways can you make change for n cents, using only pennies (1 cent), nickles (5 cents), dimes (10 cents) and quarters (25 cents)?</p></blockquote>

<p>第一反应：面额从大到小进行遍历。第二反应是DP，因为可以看出来，依次遍历会产很多重复计算。不过先来看一下遍历的算法。</p>

<h3>遍历</h3>

<p>四种面额，四层循环。每层的循环边界是剩余金额可用最多此面额的个数:<code>i&lt;remain/[denomination]</code>。每次凑够n，<code>ways</code>就加一，代码如下。</p>

<div><script src='https://gist.github.com/5045154.js'></script>
<noscript><pre><code></code></pre></noscript></div>


<p>问题很明显，太多的重复运算。并且，遍历这种运算很不直观，很多变量需要极其小心，不然就会出错。而且很多的重复代码，对于这种问题，递归是更好的选择。</p>

<h3>递归</h3>

<p>接下来尝试递归。先忘掉之前的思路，用递归的思想来想。对任意的金额n，其找零方式无非是由四种方式组成，n-25的金额再添一个quarter，n-10的金额再添一个dime，n-5的金额再添一个nickle，和n-1的金额再添一个penny，代码如下。</p>

<div><script src='https://gist.github.com/5045397.js'></script>
<noscript><pre><code></code></pre></noscript></div>


<p>比之前的遍历直观了许多。其实递归的的特点就是直观，在看代码时把函数内部调用的函数不看成是自己，看成是另外不同的函数就行，只是名字一样。只需要关注函数的返回值是什么即可。但是！这代码有BUG！</p>

<pre><code>1-&gt;1
2-&gt;1
...
5-&gt;2
6-&gt;3
</code></pre>

<p>在6的时候出现了问题，6 cents找零本应只有2种办法可是输出了3。原来程序把1 penny，1 nickle和1 nickle，1 penny算成了两种。而且，此方法计算n=100时的时间已经让人无法接受。
解决这个问题可以加上面额选择的顺序。每种金额的找零方法就是这金额减去面额a<sub>k</sub>的值所需要的方法数，加上原金额不用面额a<sub>k</sub>找零的方法数，代码如下：</p>

<div><script src='https://gist.github.com/5049071.js'></script>
<noscript><pre><code></code></pre></noscript></div>


<p>需要注意的是递归运算需要进行一些优化才能达到最佳的运行效率。尽管不能和动态规划相比，但当输入值不太大时（比如10<sup>18</sup>），优化过的递归还是有相当理想的效率的。
比如此算法里当<code>k=0</code>时，总是只有一种方法，就是全部都用penny。而上面的算法里每次都得运算到<code>remain==0</code>才会结束，也就是说，每5个数字里，除去可以被5整除的，和被5整除余1的，剩下3个数都属于重复运算。所以添加一个或条件，当<code>k==0</code>时，也返回1，这样便优化掉了3/5的运算。此优化已经添加到了以上代码中。
至此，此递归算法可以毫秒时间里算出100cents可以用到的找零方式。</p>

<h3>动态规划</h3>

<p>使用动态规划解决问题的关键是找到一个有许多共同子问题的父问题，这样就可以把将算过的子问题存到table,下次再遇到此子问题，就可以直接O(1)时间返回。
之前递归的算法尽管经过优化，仍存在大量的重复的运算。
然而，在使用动态规划分析这道题时遇到了困难。通过存储子问题的方式来运算总是无法得到正确的答案。代码如下。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">if</span> <span class="o">(</span><span class="n">remain</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> <span class="n">k</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="o">)</span> <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'><span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">ways</span><span class="o">[</span><span class="n">remain</span><span class="o">]</span> <span class="o">!=</span> <span class="mi">0</span><span class="o">)</span> <span class="k">return</span> <span class="n">ways</span><span class="o">[</span><span class="n">remain</span><span class="o">];</span>
</span><span class='line'><span class="k">else</span> <span class="nf">if</span> <span class="o">(</span><span class="n">remain</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span> <span class="k">return</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'><span class="k">else</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">ways</span><span class="o">[</span><span class="n">remain</span><span class="o">]</span> <span class="o">=</span> <span class="n">makeChange</span><span class="o">(</span><span class="n">remain</span><span class="o">,</span> <span class="n">k</span><span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">+</span> <span class="n">makeChange</span><span class="o">(</span><span class="n">remain</span><span class="o">-</span><span class="n">types</span><span class="o">[</span><span class="n">k</span><span class="o">],</span> <span class="n">k</span><span class="o">);</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">ways</span><span class="o">[</span><span class="n">remain</span><span class="o">];</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>看似合理，考虑了各面额的顺序，但在remain=10时便开始出错。尝试了诸多办法均无法解决，也不觉得有什么微小的BUG，于是意识到可能这问题不满足使用动态规划<a href="http://baike.baidu.com/view/28146.htm#8">前提</a>：最优化原理和无后效性。</p>

<ul>
<li><strong>最优化原理(optimal substructure)：</strong>一个最优化策略的子策略总是最优的。比如u,v为一个图中两点，且从u到v存在最短路径p，如果w也在p上，则p也是w到v和w到u的最短路径。</li>
<li><strong>无后效性(no after-effect)：</strong>某阶段的状态一旦确定，则此后过程的演变不再受此前各种状态及决策的影响，简单的说，就是“未来与过去无关”，当前的状态是此前历史的一个完整总结。</li>
</ul>


<p>对于此问题，首先所求的并非是最优解，而是所有可能的解。所以如果用求最优解的方式来求所有解，可能会出现一些不可预料的问题。并且，如果说是求最少coin数，则也是简单的贪心算法问题，而不是动态规划问题。再之，对于后效性，此问题也并非是简单的完全没有后效性，因为例如n=10的子问题包括n=0，n=5，和n=9。</p>

<p>所以这道题最容易的解法应该是递归，或者迭代，而不是动态规划。但此题也不是不能用动态规划来解，需要用到另外一个知识：<strong>Generating Function</strong>(<a href="http://baike.baidu.com/view/2415279.htm">生成函数</a>)。
更详细的解释请看<a href="http://www.blindrut.ca/~neitsch/math/talks/m496pres1.nb.pdf">这里</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[中文编码问题]]></title>
    <link href="http://CollinDai.github.com/blog/2013/02/20/chinese-encode-problem/"/>
    <updated>2013-02-20T17:14:00-05:00</updated>
    <id>http://CollinDai.github.com/blog/2013/02/20/chinese-encode-problem</id>
    <content type="html"><![CDATA[<p>在用octopress写中文时遇到了问题：</p>

<pre><code>YAML Exception reading 2012-11-23-rise-of-the-guardians.markdown: invalid byte sequence in GBK
</code></pre>

<p>经查找是中文的句号引起的。
<a href="http://www.v2ex.com/t/26027">这里</a>说</p>

<blockquote><ol>
<li>markdown文件如果出现了中文请另存为UTF-8格式且去掉BOM头。</li>
<li>yaml的冒号后要有空格。</li>
<li>把设置环境变量里的zh_CN改成en_US。</li>
</ol>
</blockquote>

<!--more-->


<p>根据我的经验，yaml里的冒号后无空格报的不是这个错。于是我先尝试了&#8221;UTF-8 without BOM&#8221;编码，直接用Notepad++转换。结果还是报这个错，然后我又尝试了修改环境变量。Windows7右键计算机->属性->高级系统设置->环境变量。在“系统变量”那一栏中新建两个变量<code>LANG</code>和<code>LC_ALL</code>,都设置为<code>en_US.UTF-8</code>。再尝试generate果然就没报错了。
不知道<code>LANG</code>和<code>LC_ALL</code>是什么变量，但估计是linux里用的。</p>

<p>对了，文件名也不能用中文，也就是说博客的网址里只有显示英文。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Glass]]></title>
    <link href="http://CollinDai.github.com/blog/2013/02/20/exciting-new-tech/"/>
    <updated>2013-02-20T16:35:00-05:00</updated>
    <id>http://CollinDai.github.com/blog/2013/02/20/exciting-new-tech</id>
    <content type="html"><![CDATA[<p>下面是一段Google Glass最新的演示视频.</p>

<!--more-->




<div class="embed-video-container"><iframe src="http://www.youtube.com/embed/v1uyQZNg2vE "></iframe></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[stay curious]]></title>
    <link href="http://CollinDai.github.com/blog/2013/02/19/stay-curious/"/>
    <updated>2013-02-19T16:41:00-05:00</updated>
    <id>http://CollinDai.github.com/blog/2013/02/19/stay-curious</id>
    <content type="html"><![CDATA[<p><a href="http://staycurious.tk">http://staycurious.tk</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rise of the Guardians]]></title>
    <link href="http://CollinDai.github.com/blog/2012/11/23/rise-of-the-guardians/"/>
    <updated>2012-11-23T12:38:00-05:00</updated>
    <id>http://CollinDai.github.com/blog/2012/11/23/rise-of-the-guardians</id>
    <content type="html"><![CDATA[<p>Do not envy the filmmaker trying to make an original holiday movie. It&#8217;s all been done. Santa has been played by the likes of Tim Allen and Paul Giamatti. He&#8217;s had problems with overgrown elves (Will Ferrell in Elf) and recalcitrant brothers (Vince Vaughn in Fred Claus). He&#8217;s been forced into marriage (Santa Clause 2) and working retail (Miracle on 34th Street). Robert Zemeckis (The Polar Express) and Aardman Animation (Arthur Christmas) both walloped him with high tech.</p>

<!--more-->


<p>But I am not sure that he has ever wielded a scimitar in each hand while speaking like a Russian gangster, as he does in DreamWorks Animation&#8217;s highly contrived and often confusing Rise of the Guardians, which is adapted from children&#8217;s book author and Robots production designer William Joyce&#8217;s Guardian series. Voiced by Alec Baldwin, this Santa character (called North) has bigger troubles than toy delivery. He has to go to war with a Voldemort-like boogeyman named Pitch (Jude Law) in order to save childhood innocence, and to do so he needs the help of the mythical Guardians. They include the treacle-sweet Tooth (Isla Fisher), the cocky Easter Bunny (Hugh Jackman) and the Sandman (voiced by no one; he&#8217;s kind of a mime).</p>

<p>(READ: About the time Hugh Jackman hugged TIME&#8217;s Joel Stein)</p>

<p>But the usual suspects aren&#8217;t enough. Pitch is desperate for attention—supposedly no one believes in the boogeyman anymore, although the popularity of the Paranormal Activity series would suggest otherwise—and begins to cast a dark mood over children everywhere. The Man in the Moon recommends the Guardians add reinforcements in the form of mischief-maker Jack Frost (Chris Pine). He&#8217;s a surprise choice; the kids don&#8217;t believe in Jack Frost, if they&#8217;ve ever heard of him. Poor Jack. If he&#8217;s lucky, maybe he&#8217;ll get a mention from a mom instructing her kid to put on a coat, lest Jack Frost nip at his or her nose or fingers and toes. Enter the reluctant fifth Guardian; the Hulk in this kiddie version of The Avengers.</p>

<p>Pitch&#8217;s first nefarious act is to steal all the teeth collected by Tooth and capture all her little tooth minions, making it impossible for her to continue to collect baby teeth in the interim. On North&#8217;s mega globe, the lights representing belief immediately begin to go out. Without cash for canines, faith is no more. And it&#8217;s April, so Bunny is the next threatened Guardian.</p>

<p>(READ: Mary Pols&#8217; review of Isla Fisher&#8217;s Bachelorette)</p>

<p>There is cinematic precedent for Santa hanging with the other representatives of all  major holidays involving gifts, candy or money. He had some dealings with the “Council of Legendary Figures” in the Santa Clause movies, including all of the above plus Mother Nature, Father Time and Cupid. Jack Frost was the outsider in that scheme as well (Martin Short played him as a saboteur in Santa Clause 3). In Norse legends Jokul Frosti was downright dangerous. In this incarnation he&#8217;s about 12 years-old, a barefoot sprite with grey hair, cute and kind of like a miniature Richard Gere. Jack is bound to be a hit with boys in the audience, especially after Rise of the Guardian&#8217;s best sequence, in which Jack takes a still-believing boy sledding at top speed through quintessential small-town America. The character feels fresh and new, re-imagined as someone kids can relate to and ultimately (no spoilers) proves to have a bittersweet back story. On his own, Jack could carry a movie. Instead the movie, directed by Peter Ramsey, a longtime art department guy making his feature film debut, grinds through various machinations to make Jack a member of this fraternity. As for the business of having the Tooth Fairy develop a crush on Jack, simpering while she paws at him? Creepy and no way to protect childhood innocence. (I&#8217;d take Dwayne “The Rock” Johnson in a tutu over this twit any day.)</p>

<p>Joyce&#8217;s Guardian series takes place 300 years prior to the action in this story, which was written and tailored specifically for the movie, is old fashioned and beautifully illustrated, and some of that translates to screen. Tooth and her minions, depicted as pretty little hummingbirds, could be the realization of the great illustrator Arthur Rackham. But the Sandman, drawn to look like an amber-colored Pikachu and giving off the sunny glow of Harpo Marx, is a dud. And his presence feels unnatural, especially without any reference to his current obscurity. The movie depicts Jack Frost as being forgotten by the current generation, but come on, the Sandman? While Pat Ballard&#8217;s song from 1954, with its lyrics “bring me a dream” prolonged in the Sandman mythology, we&#8217;re two generations removed from Sandman days. Modern children tend go to sleep to the sounds of whales or white noise, with nary a mention of the Sandman.</p>

<p>(READ: How much TIME&#8217;s critic loved the Star Trek reboot starring Chris Pine)</p>

<p>He&#8217;s unlikely to be resuscitated because of his appearance in Rise of the Guardians, even though he, perhaps more than any of the other characters, is portrayed as a key player in the violent battle climax. The narrative choice, hand-to-hand combat and a showdown in the streets in order to save children from cynicism and non-believing, is ironic but hardly surprising; like most children&#8217;s movies, Rise of the Guardians mimics the patterns of adult entertainment. Where is the magic in that?</p>

<p>Read more: http://entertainment.time.com/2012/11/21/rise-of-the-guardians-santa-and-his-superhero-posse-on-a-quest-to-save-childhood-innocence/#ixzz2D4JJIqTd</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First Octopress blog]]></title>
    <link href="http://CollinDai.github.com/blog/2012/11/23/first-octopress-blog/"/>
    <updated>2012-11-23T12:12:00-05:00</updated>
    <id>http://CollinDai.github.com/blog/2012/11/23/first-octopress-blog</id>
    <content type="html"><![CDATA[<p>Nothing but test</p>
]]></content>
  </entry>
  
</feed>
